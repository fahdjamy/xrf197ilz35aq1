[package]
name = "xrf1"
version = "0.0.0"
edition = "2021"

[dependencies]
chrono = "0.4.38"
rand = "0.9.0-beta.0"
actix-web = "4.9.0"
tokio = { version = "1.0.0", features = ["macros", "rt-multi-thread"] }
tracing = "0.1.41"
tracing-subscriber = { version = "0.3.18", features = ["env-filter"] }
tracing-appender = "0.2.3"
tracing-bunyan-formatter = "0.3.10"
config = "0.15.4"
anyhow = "1.0.94"
secrecy = { version = "0.10.3", features = ["serde"] }
tower = { version = "0.5.2", features = ["full"] }
# We need the optional `derive` feature to use `serde`'s procedural macros:
# `#[derive(Serialize)]` & `#[derive(Deserialize)]`. The feature is not enabled by default to avoid pulling
# unnecessary deps for projects that do not need it.
serde = { version = "1.0.204", features = ["derive"] }
# environment variables are strings for the config crate,
# and it will fail to pick up integers if using the standard deserialization routine from serde.
# serde-aux is used to specify a custom deserialization function for things like string to u16
serde-aux = "4.5.0"

tonic = "0.12.3"
prost = "0.13.3"
prost-types = "0.13.4"

uuid = { version = "1.11.0", features = ["v4"] }
async-stream = "0.3.6"
futures = "0.3.31"
http-body = "1.0.1"

[dependencies.sqlx]
version = "0.8.2"
default-features = false
features = [
    "runtime-tokio-rustls", # tells sqlx to use the tokio runtime for its futures and rustls as TLS backend
    "macros", # “gives us access to sqlx::query! and sqlx::query_as!”
    "postgres", # unlocks Postgres-specific functionality (e.g.non-standard SQL types)
    "chrono", # “adds support for mapping SQL timestamptz to the DateTime<T> type from the chrono crate”
    "migrate" # “gives us access to the same functions used under the hood by sqlx-cli to manage migrations”
]

[build-dependencies]
tonic-build = "0.12.3"
